# 先利用 llama 1B 生成一批偏好数据，再用 DPO 做小批量对齐训练。
apiVersion: mloc/v1
kind: TrainingTask
metadata:
  name: llama1b-infer-then-dpo
  owner: demo
  annotations:
    description: "Bootstrap preference pairs via inference before running DPO fine-tuning"

spec:
  taskType: "dpo"

  resources:
    replicas: 1
    hardware:
      cpu: "12"
      memory: "46Gi"
      gpu:
        type: "any"
        count: 1
        memory: "46Gi"

  model:
    source:
      type: "huggingface"
      identifier: "meta-llama/Llama-3.2-1B-Instruct"
      revision: "main"
      trust_remote_code: false
    config:
      fp16: true
      device_map_auto: true
    vllm:
      gpu_memory_utilization: 0.85
      trust_remote_code: true

  stages:
    - name: preference-bootstrap
      spec:
        taskType: "inference"
        data:
          type: "dataset"
          url: "openai/gsm8k"
          name: "main"
          split: "train[:200]"
          column: "question"
          shuffle: true
          seed: 41
          metadata_columns:
            answer: "reference_answer"
        inference:
          system_prompt: |
            You are a careful math tutor. Solve the word problem step by step and end with "Final answer: <number>".
          max_tokens: 256
          temperature: 0.2
          top_p: 0.9
        postprocess:
          jsonl_export:
            path: "artifacts/dpo_pairs.jsonl"
            fields:
              prompt:
                from: "metadata"
                key: "prompt"
              chosen:
                from: "output"
              rejected:
                from: "literal"
                value: "I don't know the answer yet."
              reference_answer:
                from: "metadata"
                key: "reference_answer"
            required_fields:
              - "prompt"
              - "chosen"
              - "rejected"
        output:
          destination:
            type: "http"
            url: "http://localhost:8000/api/v1/results"
            timeoutSec: 30
          artifacts:
            - "artifacts/dpo_pairs.jsonl"
            - "responses.json"
            - "logs"

    - name: dpo-train
      spec:
        taskType: "dpo"
        data:
          jsonl:
            path: "${preference-bootstrap.result.jsonl_export.path}"
            url: "${preference-bootstrap.result.jsonl_export.url}"
            prompt_field: "prompt"
            chosen_field: "chosen"
            rejected_field: "rejected"
        training:
          learning_rate: 5.0e-7
          batch_size: 4
          gradient_accumulation_steps: 2
          num_train_epochs: 1
          save_model: true
          save_freq: 200
        output:
          destination:
            type: "http"
            url: "http://localhost:8000/api/v1/results"
            timeoutSec: 1800
          artifacts:
            - "responses.json"
            - "checkpoints"
            - "logs"
