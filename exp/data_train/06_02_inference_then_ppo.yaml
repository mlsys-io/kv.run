# 先用 llama 1B 生成鼓励式回复，再使用生成的数据作为 PPO 训练提示。
apiVersion: mloc/v1
kind: TrainingTask
metadata:
  name: llama1b-infer-then-ppo
  owner: demo
  annotations:
    description: "Collect uplifting responses via inference before running PPO alignment"

spec:
  taskType: "ppo"

  resources:
    replicas: 1
    hardware:
      cpu: "12"
      memory: "48Gi"
      gpu:
        type: "any"
        count: 1
        memory: "48Gi"

  model:
    source:
      type: "huggingface"
      identifier: "meta-llama/Llama-3.2-1B-Instruct"
      revision: "main"
      trust_remote_code: false
    config:
      fp16: true
      device_map_auto: true
    vllm:
      gpu_memory_utilization: 0.85
      trust_remote_code: true

  stages:
    - name: motivation-bootstrap
      spec:
        taskType: "inference"
        data:
          type: "dataset"
          url: "openai/gsm8k"
          name: "main"
          split: "train[:200]"
          column: "question"
          shuffle: true
          seed: 41
          metadata_columns:
            answer: "reference_answer"
        inference:
          system_prompt: |
            You are a careful math tutor. Solve the word problem step by step and end with "Final answer: <number>".
          max_tokens: 256
          temperature: 0.2
          top_p: 0.9
        postprocess:
          jsonl_export:
            path: "artifacts/ppo_prompts.jsonl"
            fields:
              query:
                from: "metadata"
                key: "prompt"
              reference_response:
                from: "metadata"
                key: "reference_answer"
              draft_response:
                from: "output"
            required_fields:
              - "query"
        output:
          destination:
            type: "http"
            url: "http://localhost:8000/api/v1/results"
            timeoutSec: 30
          artifacts:
            - "artifacts/ppo_prompts.jsonl"
            - "responses.json"
            - "logs"

    - name: ppo-train
      spec:
        taskType: "ppo"
        reward_model:
          identifier: "cardiffnlp/twitter-roberta-base-sentiment-latest"
          type: "sentiment"
        data:
          jsonl:
            path: "${motivation-bootstrap.result.jsonl_export.path}"
            query_field: "query"
        training:
          learning_rate: 1.41e-5
          batch_size: 1
          per_device_train_batch_size: 1
          mini_batch_size: 1
          gradient_accumulation_steps: 1
          steps: 2
          ppo_epochs: 1
          target_kl: 0.1
          seed: 42
          save_model: true
          save_freq: 32
        generation:
          max_new_tokens: 32
          temperature: 0.7
          do_sample: true
        output:
          destination:
            type: "http"
            url: "http://localhost:8000/api/v1/results"
          artifacts:
            - "responses.json"
            - "checkpoints"
            - "logs"
